function _defineProperty(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    }
    else {
        obj[key] = value;
    }
    return obj;
}
import { inputShapeKey } from '../types/index.js';
import BaseTypeRef from './base.js';
let _inputShapeKey = inputShapeKey;
class InputObjectRef extends BaseTypeRef {
    constructor(listType, required) {
        super("InputList", `InputList<${String(listType)}>`);
        _defineProperty(this, "kind", "InputList");
        _defineProperty(this, _inputShapeKey, void 0);
        _defineProperty(this, "listType", void 0);
        _defineProperty(this, "required", void 0);
        this.listType = listType;
        this.required = required;
    }
}
export { InputObjectRef as default };
//# sourceMappingURL=input-list.js.map
